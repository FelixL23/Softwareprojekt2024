// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SoPro24Team03.Data;

#nullable disable

namespace SoPro24Team03.Migrations
{
    [DbContext(typeof(ReplayContext))]
    [Migration("20240728184406_InititalCreate")]
    partial class InititalCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("DepartmentTaskTemplate", b =>
                {
                    b.Property<int>("DepartmentsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TaskTemplatesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DepartmentsId", "TaskTemplatesId");

                    b.HasIndex("TaskTemplatesId");

                    b.ToTable("DepartmentTaskTemplate");
                });

            modelBuilder.Entity("ProcedureTemplateRole", b =>
                {
                    b.Property<int>("ProcedureTemplateId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProcedureTemplateId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("ProcedureTemplateRole");
                });

            modelBuilder.Entity("ProcedureTemplateTaskTemplate", b =>
                {
                    b.Property<int>("ProcedureTemplateId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TaskTemplateId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProcedureTemplateId", "TaskTemplateId");

                    b.HasIndex("TaskTemplateId");

                    b.ToTable("ProcedureTemplateTaskTemplate");
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.Property<int>("RolesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("usersId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RolesId", "usersId");

                    b.HasIndex("usersId");

                    b.ToTable("RoleUser");
                });

            modelBuilder.Entity("SoPro24Team03.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("SoPro24Team03.Models.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AuthorId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("TaskInstId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("VisibleToOthers")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("TaskInstId");

                    b.ToTable("TaskInstNotes");
                });

            modelBuilder.Entity("SoPro24Team03.Models.Procedure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CreatedContractType")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FutureDepartmentId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NumTasksDone")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumTasksTotal")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OrderedTaskInstIds")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ReferId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RespId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("TargetDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("TemplateId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FutureDepartmentId");

                    b.HasIndex("ReferId");

                    b.HasIndex("RespId");

                    b.HasIndex("TemplateId");

                    b.ToTable("Procedures");
                });

            modelBuilder.Entity("SoPro24Team03.Models.ProcedureTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OrderedTaskTemplateIds")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ProcedureTemplates");
                });

            modelBuilder.Entity("SoPro24Team03.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("SoPro24Team03.Models.TaskInst", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProcedureId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RespId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("TargetDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TemplateId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProcedureId");

                    b.HasIndex("RespId");

                    b.HasIndex("TemplateId");

                    b.ToTable("TaskInsts");
                });

            modelBuilder.Entity("SoPro24Team03.Models.TaskResponsible", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RoleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TaskRespType")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("TaskResponsibles");
                });

            modelBuilder.Entity("SoPro24Team03.Models.TaskTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContractTypes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("CustomDays")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DueType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Instruction")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TaskResponsibleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TaskResponsibleId");

                    b.ToTable("TaskTemplates");
                });

            modelBuilder.Entity("SoPro24Team03.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ContractStart")
                        .HasColumnType("TEXT");

                    b.Property<int>("ContractType")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("changedInitialPassword")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isArchived")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isSuspended")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DepartmentTaskTemplate", b =>
                {
                    b.HasOne("SoPro24Team03.Models.Department", null)
                        .WithMany()
                        .HasForeignKey("DepartmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoPro24Team03.Models.TaskTemplate", null)
                        .WithMany()
                        .HasForeignKey("TaskTemplatesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProcedureTemplateRole", b =>
                {
                    b.HasOne("SoPro24Team03.Models.ProcedureTemplate", null)
                        .WithMany()
                        .HasForeignKey("ProcedureTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoPro24Team03.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProcedureTemplateTaskTemplate", b =>
                {
                    b.HasOne("SoPro24Team03.Models.ProcedureTemplate", null)
                        .WithMany()
                        .HasForeignKey("ProcedureTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoPro24Team03.Models.TaskTemplate", null)
                        .WithMany()
                        .HasForeignKey("TaskTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.HasOne("SoPro24Team03.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoPro24Team03.Models.User", null)
                        .WithMany()
                        .HasForeignKey("usersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SoPro24Team03.Models.Note", b =>
                {
                    b.HasOne("SoPro24Team03.Models.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoPro24Team03.Models.TaskInst", "TaskInst")
                        .WithMany("Notes")
                        .HasForeignKey("TaskInstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("TaskInst");
                });

            modelBuilder.Entity("SoPro24Team03.Models.Procedure", b =>
                {
                    b.HasOne("SoPro24Team03.Models.Department", "FutureDepartment")
                        .WithMany()
                        .HasForeignKey("FutureDepartmentId");

                    b.HasOne("SoPro24Team03.Models.User", "Refer")
                        .WithMany()
                        .HasForeignKey("ReferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoPro24Team03.Models.User", "Resp")
                        .WithMany()
                        .HasForeignKey("RespId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoPro24Team03.Models.ProcedureTemplate", "Template")
                        .WithMany()
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FutureDepartment");

                    b.Navigation("Refer");

                    b.Navigation("Resp");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("SoPro24Team03.Models.TaskInst", b =>
                {
                    b.HasOne("SoPro24Team03.Models.Procedure", "Procedure")
                        .WithMany("TaskInsts")
                        .HasForeignKey("ProcedureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoPro24Team03.Models.TaskResponsible", "Resp")
                        .WithMany()
                        .HasForeignKey("RespId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoPro24Team03.Models.TaskTemplate", "Template")
                        .WithMany("TaskInstances")
                        .HasForeignKey("TemplateId");

                    b.Navigation("Procedure");

                    b.Navigation("Resp");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("SoPro24Team03.Models.TaskResponsible", b =>
                {
                    b.HasOne("SoPro24Team03.Models.Role", "Role")
                        .WithMany("TaskResponsibles")
                        .HasForeignKey("RoleId");

                    b.HasOne("SoPro24Team03.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SoPro24Team03.Models.TaskTemplate", b =>
                {
                    b.HasOne("SoPro24Team03.Models.TaskResponsible", "TaskResponsible")
                        .WithMany()
                        .HasForeignKey("TaskResponsibleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaskResponsible");
                });

            modelBuilder.Entity("SoPro24Team03.Models.User", b =>
                {
                    b.HasOne("SoPro24Team03.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("SoPro24Team03.Models.Procedure", b =>
                {
                    b.Navigation("TaskInsts");
                });

            modelBuilder.Entity("SoPro24Team03.Models.Role", b =>
                {
                    b.Navigation("TaskResponsibles");
                });

            modelBuilder.Entity("SoPro24Team03.Models.TaskInst", b =>
                {
                    b.Navigation("Notes");
                });

            modelBuilder.Entity("SoPro24Team03.Models.TaskTemplate", b =>
                {
                    b.Navigation("TaskInstances");
                });
#pragma warning restore 612, 618
        }
    }
}
